
var bluebird = require('bluebird');
var extension = require('extension');
var fs = require('fs');
var config = require('config');
var path = require('path');
var log = require('log');

var storagefolder = path.join(__dirname, '../../../' + config.folder4localStorage);

//return: { path: '' }
exports.handle = function (buffer, filename, dirname) {
    return extension.file.mkdirp(storagefolder)
    .then(function () {
        var blobname = path.join(config.env, (dirname || ''), extension.random.getRandom() + 'rd' + filename).replace(/[\/\\]/g, '_').toLowerCase();
        log.debug({ type: 'creating local file' }, { filename: filename, dirname: dirname, blobname: blobname, bufferLen: buffer.length });
        var defer = new bluebird.defer();
        fs.writeFile(path.join(storagefolder, blobname), buffer, function (err) {
            if (err) {
                log.error({ type: 'failed to create local file' }, { err: err });
                defer.reject(err);
            }
            else {
                log.debug({ type: 'successfully create a local file' }, {});
                defer.resolve({ path: blobname, storage: 'local' });
            }
        });
        return defer.promise;
    })
};
