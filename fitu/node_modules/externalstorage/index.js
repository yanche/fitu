
var azurestorage = require('./azurestorage.js');
var qiniustorage = require('./qiniustorage.js');
var localstorage = require('./localstorage.js');
var errdef = require('errdef');
var log = require('log');
var config = require('config');
azurestorage.init();

var saveFile = function (buffer, filename, dirname) {
    if (config.env == 'dev') {
        return localstorage.handle(buffer, filename, dirname)
        .catch(function (err) {
            log.critical({ 'type': 'failed saving local file' }, { msg: 'failed when saving to local file in dev env, throw error to upper layer', err: err });
            throw new errdef.ExternalStorageError(err);
        })
        .then(function (ret) {
            return ret;
        });
    }
    else {
        return azurestorage.handle(buffer, filename, dirname)
        .catch(function (err) {
            log.warn({ 'type': 'external storage downgrade warn' }, { msg: 'failed when saving to azure storage, downgrade to qiniu', err: err });
            return qiniustorage.handle(buffer, filename, dirname);
        })
        .catch(function (err) {
            log.warn({ 'type': 'external storage downgrade warn' }, { msg: 'failed when saving to qiniu storage, downgrade to local', err: err });
            return localstorage.handle(buffer, filename, dirname);
        })
        .catch(function (err) {
            log.critical({ 'type': 'failed saving local file' }, { msg: 'failed when saving to local file, no more downgrade, throw error to upper layer', err: err });
            throw new errdef.ExternalStorageError(err);
        })
        .then(function (ret) {
            return ret;
        });
    }
};

exports.saveFile = saveFile;
