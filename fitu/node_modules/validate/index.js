
var emailRegex = new RegExp('^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$');
var phoneRegex = new RegExp('^[0-9]{11}$');
var hashRegex = new RegExp('^[a-fA-F0-9]{40}$'); //SHA1
var dateRegex = new RegExp('^[0-9]{1,4}/(((0?[1-9]|1[0-2])/(0?[1-9]|[12][0-9]))|((0?[13-9]|1[0-2])/30)|((0?[13578]|1[02])/31))$');
var numletterReg = new RegExp('^[a-zA-Z0-9]+$');
var constants = require('const');

var validateHash = function (str) {
    return hashRegex.test(str);
};

var validateNonEmptyArray = function (obj) {
    return Array.isArray(obj) && obj.length > 0;
};

var validateValuedString = function (str) {
    return isString(str) && str.trim().length > 0;
};

var validateStringWithoutNewLine = function (str) {
    return isString(str) && str.indexOf('\n') < 0 && str.indexOf('\r') < 0;
};

var validateStringOnlyNumAndLetter = function (str) {
    return isString(str) && numletterReg.test(str);
};

var validateNickName = function (str) {
    return validateStringWithoutNewLine(str) && str.length >= 1 && str[0] != ' ' && str[str.length - 1] != ' ';
};

var validateName = function (str) {
    return validateStringWithoutNewLine(str) && str.length >= 1 && str.length <= 8 && str.indexOf(' ') < 0;
};

var validateGender = function (str) {
    return str == constants.common.gender.male || str == constants.common.gender.female;
};

var isString = function (str) {
    return (typeof str) === 'string' || (str instanceof String);
};

var validateEmail = function (str) {
    return isString(str) && emailRegex.test(str);
};

var validatePhone = function (str) {
    return isString(str) && phoneRegex.test(str);
};

var validateDate = function (str) {
    return isString(str) && dateRegex.test(str);
};

var validateNullOrEmptyString = function (str) {
    return str == null || str == ''; //null, undefined, ''
};

var validateEmptyString = function (str) {
    return str == '';
};

var validatePicInBase64 = function (str) {
    return isString(str) && str.indexOf('data:image') === 0;
};

var _userAgentMobileRegex1 = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i;
var _userAgentMobileRegex2 = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i;
var isUserAgentMobile = function (agent) {
    return isString(agent) && (_userAgentMobileRegex1.test(agent) || _userAgentMobileRegex2.test(agent.substr(0, 4)));
};

var validateUrl = function (str) {
    //TODO:
    return isString(str);
};

var isObj = function (input) {
    return Object.prototype.toString.call(input) === '[object Object]';
};

var validateValue = function (input) {
    return input != null; //not null, not undefined
};

var validateStringArray = function (arr) {
    return Array.isArray(arr) && arr.every(function (v) { return isString(v); });
};

var validateAndAdjustGEO = function (geo) {
    if (!geo)
        return false;
    else {
        var lat = validateAndAdjustLAT(geo.lat), lng = validateAndAdjustLNG(geo.lng);
        if (lat && lng)
            return { lat: lat, lng: lng };
        else
            return false;
    }
};

//latitude
var validateAndAdjustLAT = function (lat) {
    var lat = Number(lat);
    if (!isNaN(lat) && lat >= 30 && lat <= 32)
        return lat;
    else
        return false;
};

//longtitude
var validateAndAdjustLNG = function (lng) {
    var lng = Number(lng);
    if (!isNaN(lng) && lng >= 120 && lng <= 122)
        return lng;
    else
        return false;
};

var validateAndAdjustTags = function (tags) {
    var ret = [];
    if (Array.isArray(tags)) {
        for (var i = 0; i < tags.length; ++i) {
            if (constants.tags.some(function (t) { return t.key == tags[i]; })) {
                if (ret.every(function (r) { r != tags[i]; }))
                    ret.push(tags[i]);
            }
            else
                return false;
        }
    }
    else
        return false;
    return ret.length == 0 ? false : ret;
};

exports.stringArray = validateStringArray;
exports.nonEmptyArray = validateNonEmptyArray;
exports.email = validateEmail;
exports.phone = validatePhone;
exports.date = validateDate;
exports.nickName = validateNickName;
exports.stringWithoutNewLine = validateStringWithoutNewLine;
exports.isString = isString;
exports.valuedString = validateValuedString;
exports.value = validateValue;
exports.nullOrEmptyStr = validateNullOrEmptyString;
exports.emptyString = validateEmptyString;
exports.name = validateName;
exports.gender = validateGender;
exports.numletter = validateStringOnlyNumAndLetter;
exports.userAgentMobile = isUserAgentMobile;
exports.picBase64 = validatePicInBase64;
exports.url = validateUrl;
exports.hash = validateHash;
exports.isObj = isObj;
exports.geo = validateAndAdjustGEO;
exports.tags = validateAndAdjustTags;

exports.site = require('./site.js');