
var fs = require('fs');
var bluebird = require('bluebird');
var mime = require('mime');
var zlib = require('zlib');
var path = require('path');
var _mkdirp = require('mkdirp');

var fileLastModified = function (fileName) {
    var defer = new bluebird.defer();
    fs.stat(fileName, function (err, stat) {
        if (err)
            defer.reject(err);
        else
            defer.resolve(new Date(stat.mtime));
    });
    return defer.promise;
};

var getMimeType = function (fileName) {
    var ct = 'text/plain; charset=utf-8';
    try {
        ct = mime.lookup(fileName);  //use mime to get content type for static file.
    }
    catch (err) {
        console.log('failed to get content type of: ' + fileName);
    }
    return ct;
};

var gzipContent = function (content) {
    var defer = new bluebird.defer();
    zlib.gzip(content, function (err, buf) {
        if (err)
            defer.reject(err);
        else
            defer.resolve(buf);
    });
    return defer.promise;
};

var mkdirp = function (dirpath) {
    var defer = new bluebird.defer();
    _mkdirp(dirpath, function (err) {
        if (err)
            defer.reject(err);
        else
            defer.resolve();
    });
    return defer.promise;
};

var readFile = function (filename) {
    var defer = new bluebird.defer();
    fs.readFile(filename, function (err, buf) {
        if (err)
            defer.reject(err);
        else
            defer.resolve(buf);
    });
    return defer.promise;
};

exports.fileLastModified = fileLastModified;
exports.getMimeType = getMimeType;
exports.gzipContent = gzipContent;
exports.mkdirp = mkdirp;
exports.readFile = readFile;
