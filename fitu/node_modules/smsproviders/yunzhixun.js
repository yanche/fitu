
var bluebird = require('bluebird');
var https = require('https');
var extension = require('extension');
var SmsRet = require('./smsret.js');

var genVC = function () {
    var num = Math.ceil(Math.random() * 10000);
    if (num == 10000)
        num = 9999;
    var num = num.toString();
    while (num.length < 4) {
        num = '0' + num;
    }
    return num;
};

var yzxConfig = {
    version: '2014-06-30',
    acctSid: '544ed7bfd5cf3a23c5fbc8c86e75f821',
    acctToken: '656bdbe473d3c78bd019a3c861cc31bc',
    appId: '9b92d099787449b2b98179e1547e3c3c',
    expire: 50 * 60 //seconds
};

var getYZXAuthHeader = function (timestamp) {
    var raw = new Buffer(yzxConfig.acctSid + ':' + timestamp);
    return raw.toString('base64');
};

var getYZXSig = function (timestamp) {
    var raw = yzxConfig.acctSid + yzxConfig.acctToken + timestamp;
    return extension.crypto.md5(raw).toUpperCase();
};

//options:
//toMobile
var yunZhiXun = function (options) {
    var defer = new bluebird.defer();
    var vc = genVC();
    var timestamp = extension.datetime.chinaNow('YYYYMMDDHHmmss');
    var reqData = new Buffer(JSON.stringify({ templateSMS: { appId: yzxConfig.appId, templateId: '4316', to: options.toMobile, param: ['手机认证', vc].join(',') } }));
    var req = https.request({
        hostname: 'api.ucpaas.com',
        port: 443,
        path: '/' + yzxConfig.version + '/Accounts/' + yzxConfig.acctSid + '/Messages/templateSMS?sig=' + getYZXSig(timestamp),
        method: 'POST',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json;charset=utf-8',
            'Content-Length': reqData.length,
            Authorization: getYZXAuthHeader(timestamp)
        }
    }, function (res) {
        extension.http.getRawBody(res)
        .then(function (rawdata) {
            return extension.http.parseBody(rawdata, res.headers['content-type']);
        })
        .then(function (data) {
            if (data && data.resp && data.resp.respCode) {
                if (data.resp.respCode == '000000') {
                    var smsret = new SmsRet(vc, data);
                    defer.resolve(smsret);
                }
                else
                    defer.reject(new Error('yunzhixun sms failure, bad return code: ' + JSON.stringify(data)));
            }
            else
                defer.reject(new Error('yunzhixun sms failure, invalid schema: ' + JSON.stringify(data)));
        })
        .catch(function (err) {
            defer.reject(err);
        })
    });
    req.end(reqData);
    req.on('error', function (err) {
        defer.reject(err);
    });
    return defer.promise;
};

exports.handle = yunZhiXun;
