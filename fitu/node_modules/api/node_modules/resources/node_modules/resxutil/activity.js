
var resxutil = require('resxutil');
var db = require('dbaccess');
var bluebird = require('bluebird');

exports.getFields = { '_id': 1, 'siteIdleId': 1, 'siteId': 1, 'vendorId': 1, 'name': 1, 'price': 1, 'startsOn': 1, 'endsOn': 1, 'tags': 1, 'intro': 1, 'picUrl': 1, 'capacity': 1, 'createdOn': 1, 'createdBy': 1 };
exports.convActivityInfo = function (act, creators, siteidles, sites, vendors, members, msgs) {
    var ret = { id: act._id.toString(), name: act.name, price: act.price, startsOn: act.startsOn, endsOn: act.endsOn, tags: act.tags, intro: act.intro, picUrl: act.picUrl, capacity: act.capacity, createdOn: act.createdOn, createdBy: act.createdBy };
    var siteidle = siteidles.filter(function (idle) { return idle._id.equals(act.siteIdleId); })[0];
    ret.siteIdle = siteidle ? resxutil.siteidle.convRelatedSiteIdleInfo(siteidle) : null;
    var site = sites.filter(function (st) { return st._id.equals(act.siteId); })[0];
    ret.site = site ? resxutil.site.convRelatedSiteInfo(site) : null;
    var vendor = vendors.filter(function (vd) { return vd._id.equals(act.vendorId); })[0];
    ret.vendor = vendor ? resxutil.vendor.convRelatedVendorInfo(vendor) : null;
    var creator = creators.filter(function (user) { return user._id.equals(act.createdBy); })[0];
    ret.creator = creator ? resxutil.user.convRelatedUserInfo(creator) : null;
    var memCount = members ? members.filter(function (m) { return m.actId.equals(act._id); }).length : 0;
    ret.memberCount = memCount;
    var msgCount = msgs ? msgs.filter(function (m) { return m.targetId.equals(act._id); }).length : 0;
    ret.msgCount = msgCount;
    return ret;
};
exports.getRelatedActivityFields = { '_id': 1, 'name': 1, 'price': 1, 'startsOn': 1, 'endsOn': 1, 'picUrl': 1, 'createdBy': 1 };
exports.convRelatedActivityInfo = function (act) {
    return { id: act._id.toString(), name: act.name, price: act.price, startsOn: act.startsOn, endsOn: act.endsOn, picUrl: act.picUrl, createdBy: act.createdBy };
};
exports.activityExistence = function (actObjId) {
    if (!actObjId)
        return bluebird.resolve(false);
    else {
        return db.activity.getOneActFieldsBy({ _id: actObjId }, { _id: 1 })
        .then(function (act) {
            return Boolean(act);
        });
    }
};
