
var resxutil = require('resxutil');
var db = require('dbaccess');
var bluebird = require('bluebird');

exports.getFields = { _id: 1, name: 1, tags: 1, location: 1, intro: 1, picUrl: 1, vendorId: 1, createdOn: 1, prices: 1, open: 1, contact: 1, fans: 1, statusId: 1, trans: 1 };
exports.convSiteInfo = function (site, vendors) {
    var ret = { id: site._id.toString(), name: site.name, tags: site.tags, location: site.location, intro: site.intro, picUrl: site.picUrl, createdOn: site.createdOn, prices: site.prices, open: site.open, contact: site.contact, fansCount: site.fans.length, statusId: site.statusId, trans: site.trans };
    var vendor = site.vendorId ? vendors.filter(function (vd) { return vd._id.equals(site.vendorId); })[0] : null;
    ret.vendor = vendor ? resxutil.vendor.convRelatedVendorInfo(vendor) : null;
    return ret;
};
exports.getRelatedSiteFields = { _id: 1, name: 1, picUrl: 1, location: 1, vendorId: 1, trans: 1 };
exports.convRelatedSiteInfo = function (site) {
    return { id: site._id.toString(), name: site.name, picUrl: site.picUrl, location: site.location, vendorId: site.vendorId ? site.vendorId.toString() : null, trans: site.trans };
};
exports.siteExistence = function (siteObjId) {
    if (!siteObjId)
        return bluebird.resolve(false);
    else {
        return db.site.getOneSiteFieldsBy({ _id: siteObjId }, { _id: 1 })
        .then(function (st) {
            return Boolean(st);
        });
    }
};
exports.siteBelongsToVendor = function (siteObjId, vendorObjId) {
    return db.site.getOneSiteFieldsBy({ _id: siteObjId, vendorId: vendorObjId }, { _id: 1 })
    .then(function (site) {
        return Boolean(site);
    });
};
