
var db = require('dbaccess');
var bluebird = require('bluebird');
var extension = require('extension');
var constants = require('const');
var errdef = require('errdef');
var validate = require('validate');
var config = require('config');
var Resource = require('resource');
var infra = require('infra');
var resxutil = require('resxutil');

var SingleSession = function (webreq) {
    var me = this;
    Resource.call(this, webreq);
    me.filter.sessionId = webreq.search.id;
    me.targetSession_CL = new infra.CachedLoader(function () {
        return db.session.getOneSessionFieldsBy({ sessionId: me.filter.sessionId }, { userId: 1 });
    });
};

SingleSession.prototype = Object.create(Resource.prototype);

SingleSession.prototype._accessibility = function () {
    var httpOptions = new resxutil.HttpOptions();
    var me = this;
    if (!me.filter.sessionId)
        return bluebird.resolve(httpOptions.setStatus('DELETE', 400));
    else if (!me.operator)
        return bluebird.resolve(httpOptions.setStatus('DELETE', 401));
    else {
        return me.targetSession_CL.load()
        .then(function (sess) {
            if (!sess)
                return httpOptions.setStatus('DELETE', 404);
            else if (sess.userId.equals(me.operator.objId))
                return httpOptions.setStatus('DELETE', 200);
            else {
                return me.operator.isGod()
                .then(function (ok) {
                    return httpOptions.setStatus('DELETE', ok ? 200 : 401);
                });
            }
        });
    }
};

SingleSession.prototype._delete = function () {
    var me = this;
    return me._accessibility()
    .then(function (httpOptions) {
        var status = httpOptions.getStatus('DELETE');
        if (status.isOK())
            return me.targetSession_CL.load();
        else
            throw new errdef.DeferChainKiller(status.toWebres());
    })
    .then(function (current) {
        if (!current)
            throw new errdef.DeferChainKiller(extension.http.webres404());
        else
            return db.session.removeSessions({ 'sessionId': me.filter.sessionId });
    })
    .then(function (ct) {
        if (ct)
            return extension.http.webres200();
        else
            return extension.http.webres500(); //nothing removed, resource not found
    })
    .catch(errdef.DeferChainKiller, function (err) {
        return err.attach;
    });
};

module.exports = SingleSession;