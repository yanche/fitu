
var fileclient = require('fileclient');
var bluebird = require('bluebird');
var validate = require('validate');
var extension = require('extension');
var es = require('externalstorage');
var errdef = require('errdef');
var extension = require('extension');

var uploadOneImageOrByPass = function (obj, prop, subfolder) {
    if (validate.picBase64(obj[prop])) {
        var imageFormat = extension.image.getImageUploadFormat(obj[prop]);
        //TODO: better interface contract
        return es.saveFile(new Buffer(imageFormat.data, 'base64'), extension.random.getRandom() + '.' + imageFormat.mime.split('/')[1], subfolder)
        .then(function (ret) {
            obj[prop] = { path: ret.path, storage: ret.storage };
            return obj;
        })
        .catch(errdef.ExternalStorageError, function (err) {
            return new errdef.ImageUploadError(err);
        });
    }
    else
        return bluebird.resolve(obj);
};

exports.uploadOneImageOrByPass = uploadOneImageOrByPass;
