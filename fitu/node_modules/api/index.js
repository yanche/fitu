
var bluebird = require('bluebird');
var config = require('config');
var db = require('dbaccess');
var extension = require('extension');
var resources = require('resources');

//rawbody, args, cookies, location, search
//to attach: userId
var handle = function (webreq) {
    return webreq.authenticate()
    .then(function () {
        //resource name
        var resourcename = webreq.location.pathname.split('/')[1], method = webreq._raw.method.toLowerCase();
        var resFactory = resFactories[resourcename];
        if (resFactory)
            return resFactory(webreq).fire();
        else
            return extension.http.webres404();
    })
    .then(function (webres) {
        webres.setHeader('Access-Control-Allow-Origin', webreq.headers.origin);
        webres.setHeader('Access-Control-Max-Age', 3600);
        webres.setHeader('Access-Control-Allow-Credentials', true);
        webres.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
        webres.setHeader('Access-Control-Allow-Headers', 'Content-Type');
        return webres;
    });
};

var resFactories = {
    users: resources.usersResFactory,
    sessions: resources.sessionsResFactory,
    sites: resources.sitesResFactory,
    siteidles: resources.siteIdlesResFactory,
    vendors: resources.vendorsResFactory,
    activities: resources.activitiesResFactory,
    members: resources.membersResFactory,
    usercredentials: resources.userCredentialResFactory,
    usercontacts: resources.usercontactsResFactory,
    vendorpreview: resources.vendorpreviewsResFactory,
    messages: resources.messagesResFactory,
    notes: resources.notesResFactory,
    availability: resources.availabilityResFactory,
    footprints: resources.footprintsResFactory,
    wx: resources.wxResFactory,
    userfans: resources.userfansResFactory,
    sitefans: resources.sitefansResFactory
};

exports.handle = handle;
