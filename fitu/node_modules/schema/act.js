var validate = require('validate');
var config = require('config');
var extension = require('extension');

/*
'siteId':,
'name':,
'datetime':,
'tags': [],
'intro':,
'recruitment':,
'picUrl':
*/
var adjustActUpdate = function (input) {
    if (input == null || !validate.isObj(input))
        return false;
    var ret = {};
    //siteId
    if (validate.value(input.siteId)) {
        var siteObjId = extension.mongo.tryConvObjId(input.siteId);
        if (siteObjId) //required
            ret.siteId = siteObjId;
        else
            return false;
    }
    //name
    if (validate.value(input.name)) {
        if (validate.valuedString(input.name))
            ret.name = input.name;
        else
            return false;
    }
    //datetime
    if (validate.value(input.datetime)) {
        var datetime = new Date(input.datetime);
        if (!isNaN(datetime.getTime())) //required, later than today?
            ret.datetime = datetime;
        else
            return false;
    }
    //tags
    if (validate.value(input.tags)) {
        if (Array.isArray(input.tags))
            ret.tags = input.tags;
        else
            return false;
    }
    //intro
    if (!validate.nullOrEmptyStr(input.intro)) {
        if (validate.isString(input.intro))
            ret.intro = input.intro;
        else
            return false;
    }
    //recruitment
    if (!validate.value(input.recruitment)) {
        if (validate.isString(input.recruitment))
            ret.recruitment = input.recruitment;
        else
            return false;
    }
    //picUrl
    if (validate.value(input.picUrl)) {
        if (validate.url(input.picUrl) || validate.picBase64(input.picUrl))
            ret.picUrl = input.picUrl;
        else
            return false;
    }
    return extension.obj.objLen(ret) == 0 ? false : ret;
};

/*
'siteId':,
'name':,
'datetime':,
'tags': [],
'intro':,
'recruitment':,
'picUrl':
*/
var adjustActCreate = function (input) {
    if (input == null || !validate.isObj(input))
        return false;
    var ret = {};
    //siteId
    var siteObjId = extension.mongo.tryConvObjId(input.siteId);
    if (siteObjId)
        ret.siteId = siteObjId;
    else
        return false;
    //name
    if (validate.valuedString(input.name))
        ret.name = input.name;
    else
        return false;
    //datetime
    var datetime = new Date(input.datetime);
    if (!isNaN(datetime.getTime())) //required, later than today?
        ret.datetime = datetime;
    else
        return false;
    //tags
    if (Array.isArray(input.tags))
        ret.tags = input.tags;
    else
        return false;
    //intro
    if (validate.isString(input.intro))
        ret.intro = input.intro;
    else
        return false;
    //recruitment
    if (validate.isString(input.recruitment))
        ret.recruitment = input.recruitment;
    else
        return false;
    //picUrl
    if (validate.url(input.picUrl) || validate.picBase64(input.picUrl))
        ret.picUrl = input.picUrl;
    else
        ret.picUrl = config.defaultActivityPicUrl;
    return ret;
};

exports.adjustActUpdate = adjustActUpdate;
exports.adjustActCreate = adjustActCreate;
