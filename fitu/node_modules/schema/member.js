var validate = require('validate');
var config = require('config');
var constants = require('const');
var extension = require('extension');

/*
'statusId':,
*/
var adjustMemberUpdate = function (input) {
    if (input == null || !validate.isObj(input))
        return false;
    var ret = {};
    //statusId
    if (validate.value(input.statusId)) {
        var statusId = Number(input.statusId);
        if (!isNaN(statusId) && (constants.status.memberStatus.inTeam === statusId 
            || constants.status.memberStatus.queued === statusId 
            || constants.status.memberStatus.quit === statusId))
            ret.statusId = statusId;
        else
            return false;
    }
    return extension.obj.objLen(ret) == 0 ? false : ret;
};

/*
'userId':,
'actId':,
'createdOn':,
'statusId':,
*/
var adjustMemberCreate = function (input, userId) {
    if (input == null || !validate.isObj(input))
        return false;
    var ret = {};
    //statusId
    var statusId = Number(input.statusId);
    if (!isNaN(statusId) && (constants.status.memberStatus.inTeam === statusId 
        || constants.status.memberStatus.queued === statusId 
        || constants.status.memberStatus.quit === statusId))
        ret.statusId = statusId;
    else
        ret.statusId = constants.status.memberStatus.queued;
    //userId
    var userObjId = extension.mongo.tryConvObjId(userId);
    if (userObjId)
        ret.userId = userObjId;
    else
        return false;
    //actId
    var actObjId = extension.mongo.tryConvObjId(input.actId);
    if (actObjId)
        ret.actId = actObjId;
    else
        return false;
    ret.createdOn = new Date();
    return ret;
};

exports.adjustMemberUpdate = adjustMemberUpdate;
exports.adjustMemberCreate = adjustMemberCreate;
