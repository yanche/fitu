var validate = require('validate');
var config = require('config');
var extension = require('extension');
/*
'personal':{
	'nickName':,
	'phone':,
	'contact':,
	'gender':
	},
'headUrl':,
*/
var adjustUserUpdate = function (input) {
    if (input == null || !validate.isObj(input))
        return false;
    var ret = {};
    if (validate.value(input.headUrl)) {
        if (validate.url(input.headUrl) || validate.picBase64(input.headUrl))
            ret.headUrl = input.headUrl;
        else if (validate.emptyString(input.headUrl))
            ret.headUrl = config.defaultHeadUrl;
        else
            return false;
    }
    if (validate.value(input.personal)) {
        var pret = {};
        if (validate.value(input.personal.nickName)) {
            if (validate.nickName(input.personal.nickName) || validate.emptyStr(input.personal.nickName))
                pret.nickName = input.personal.nickName;
            else
                return false;
        }
        if (validate.value(input.personal.phone)) {
            if (validate.phone(input.personal.phone) || validate.emptyStr(input.personal.phone))
                pret.phone = input.personal.phone;
            else
                return false;
        }
        if (validate.value(input.personal.contact)) {
            if (validate.email(input.personal.contact)) //must have some value
                pret.contact = input.personal.contact.toLowerCase();
            else
                return false;
        }
        if (validate.value(input.personal.gender)) {
            if (validate.gender(input.personal.gender)) //must have some value
                pret.gender = input.personal.gender;
            else
                return false;
        }
        if (extension.obj.objLen(pret) == 0)
            return false;
        else
            ret.personal = pret;
    }
    return extension.obj.objLen(ret) == 0 ? false : ret;
};

/*
'personal':{
'nickName':,
'phone':,
'contact':,
'gender':
},
'email':,
'hash_pwd':,
'headUrl':,
*/
var adjustUserCreate = function (input) {
    if (input == null || !validate.isObj(input))
        return false;
    var ret = {};
    //head url
    if (validate.url(input.headUrl) || validate.picBase64(input.headUrl))
        ret.headUrl = input.headUrl;
    else if (validate.nullOrEmptyStr(input.headUrl))
        ret.headUrl = config.defaultHeadUrl;
    else
        return false;
    //email
    if (validate.email(input.email))
        ret.email = input.email.toLowerCase();
    else
        return false;
    //hash_pwd
    if (validate.md5(input.hash_pwd))
        ret.hash_pwd = input.hash_pwd.toLowerCase();
    else
        return false;
    //personal
    if (validate.value(input.personal)) {
        var pret = {};
        //nickName
        if (validate.nickName(input.personal.nickName))
            pret.nickName = input.personal.nickName;
        //phone
        if (validate.phone(input.personal.phone))
            pret.phone = input.personal.phone;
        //contact
        if (validate.email(input.personal.contact))
            pret.contact = input.personal.contact.toLowerCase();
        else
            pret.contact = ret.email;
        //gender
        if (validate.gender(input.personal.gender))
            pret.gender = input.personal.gender;
        else
            pret.gender = '秘密';
        ret.personal = pret;
    }
    else
        ret.personal = { 'gender': '男', 'contact': ret.email };
    return ret;
};

/*
'email':,
'hash_pwd':,
*/
var adjustUserAuth = function (input) {
    if (input == null || !validate.isObj(input))
        return false;
    var ret = {};
    //email
    if (validate.email(input.email))
        ret.email = input.email.toLowerCase();
    else
        return false;
    //hash_pwd
    if (validate.md5(input.hash_pwd))
        ret.hash_pwd = input.hash_pwd.toLowerCase();
    else
        return false;
    return ret;
};

exports.adjustUserUpdate = adjustUserUpdate
exports.adjustUserCreate = adjustUserCreate;
exports.adjustUserAuth = adjustUserAuth;
