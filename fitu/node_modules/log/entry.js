
var validate = require('validate');
var config = require('config');

var cutString = function (str) {
    if (config.logStringLimit && str.length > config.logStringLimit)
        return str.slice(0, config.logStringLimit) + '...';
    else
        return str;
};

var cutArray = function (arr) {
    return arr.slice(0, 3).push('...');
};

var cutObj = function (obj) {
    var ret = {};
    for (var i in obj) {
        ret[i] = cut(obj[i]);
    }
    return ret;
};

//ATTENTION!
//only null,undefined,bool,number,string,array,literal object accepted!
var cut = function (sth) {
    if (sth == null) //null or undefined
        return sth;
    else if (validate.number(sth))
        return sth;
    else if (validate.bool(sth))
        return sth;
    else if (validate.isString(sth))
        return cutString(sth);
    else if (Array.isArray(sth))
        return cutArray(sth).map(function (v) { return cut(v); });
    else if (validate.isObj(sth))
        return cutObj(sth);
    else
        return 'unknown';
};

var LogEntry = function (options) {
    this.level = options.level;
    this.headers = options.headers;
    this.body = cut(options.body);
};
LogEntry.prototype.stringify = function () {
    return JSON.stringify({ level: this.level, headers: this.headers, body: this.body });
};

module.exports = LogEntry;