
var bluebird = require('bluebird');

var CachedLoader = function (fn) {
    this.pendingQ = [];
    this.loaded = false;
    this.result = null;
    this.fn = fn;
};

CachedLoader.prototype.load = function () {
    var me = this;
    if (me.loaded)
        return bluebird.resolve(me.result);
    else {
        var defer = new bluebird.defer();
        me.pendingQ.push(defer);
        if (me.pendingQ.length == 1) {
            me.fn()
            .then(function (data) {
                me.loaded = true;
                me.result = data;
                while (me.pendingQ.length > 0)
                    me.pendingQ.shift().resolve(data);
            });
        }
        return defer.promise;
    }
};

module.exports = CachedLoader;