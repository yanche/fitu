var bluebird = require('bluebird');
var extension = require('extension');
var url = require('url');
var config = require('config');
var models = require('models');
var extension = require('extension');
var db = require('dbaccess');

var Webreq = function (raw) {
    this._raw = raw;
};

//cookie, location, search, body: {raw, parsed, type}
Webreq.prototype.init = function () {
    var me = this;
    me.location = url.parse(me._raw.url, true);
    me.search = me.location.query;
    me.pathname = me.location.pathname;
    me.headers = me._raw.headers;
    me.cookie = extension.http.parseCookie(me.headers.cookie);
    me.method = me._raw.method.toLowerCase();
    return extension.http.getRawBody(me._raw)
    .then(function (bd) {
        me.body = { raw: bd, parsed: extension.http.parseBody(bd, me.headers['content-type']), type: me.headers['content-type'] };
        return me;
    });
};

Webreq.prototype.authenticate = function () {
    var me = this;
    if (me.cookie[config.sessionCookieName]) {
        return db.session.findAndModifySession({ 'sessionId': me.cookie[config.sessionCookieName] }, { '$set': { 'lastAccess': new Date() } }, { 'userId': 1 }, true)
        .then(function (ss) {
            if (ss)
                me.user = new models.User(ss.userId);
            return me;
        });
    }
    else
        return bluebird.resolve(me);
};

Webreq.prototype.toLogEntry = function () {
    return {
        search: this.search,
        pathname: this.pathname,
        headers: this.headers,
        cookie: this.cookie,
        method: this.method,
        body: { parsed: this.body.parsed, type: this.body.type }
    };
};

module.exports = Webreq;