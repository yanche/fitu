
var bluebird = require('bluebird');

var WxCachedLoader = function (fn) {
    this.pendingQ = [];
    this.loaded = false;
    this.result = null;
    this.fn = fn;
    this.expires = new Date().getTime();
};

WxCachedLoader.prototype.load = function () {
    var me = this;
    if (me.loaded && me.expires > new Date().getTime())
        return bluebird.resolve(me.result);
    else {
        var defer = new bluebird.defer();
        me.pendingQ.push(defer);
        if (me.pendingQ.length == 1) {
            me.loaded = false;
            me.result = null;
            me.fn()
            .then(function (bundle) {
                me.loaded = true;
                me.result = bundle[0]; //data
                me.expires = new Date().getTime() + bundle[1] * 0.8 * 1000; //expire in seconds
                while (me.pendingQ.length > 0)
                    me.pendingQ.shift().resolve(me.result);
            });
        }
        return defer.promise;
    }
};

module.exports = WxCachedLoader;