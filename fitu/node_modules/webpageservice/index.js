
var fs = require('fs');
var path = require('path');
var bluebird = require('bluebird');
var jade = require('jade');
var extension = require('extension');
var constants = require('const');
var config = require('config');
var FileService = require('fileservice');
var url = require('url');

//options: {wdir:, cachePage: }
var WebPageService = function (options) {
    this.options = options || {};
    this.options.wdir = this.options.wdir || __dirname;
    
    this.fservice = new FileService({ wdir: this.options.wdir });
    this.jadeCPLer = null;
    this.pageJadeName = path.join(this.options.wdir, '/app.jade');
};

WebPageService.prototype.handle = function (webreq) {
    if (webreq.pathname.indexOf('/app') == 0)
        return this.fservice.handle(webreq);
    else {
        if (this.jadeCPLer)
            var cpl = this.jadeCPLer;
        else {
            var cpl = jade.compileFile(this.pageJadeName);
            if (this.options.cachePage)
                this.jadeCPLer = cpl;
        }
        return extension.http.webres200(constants.mime.html, cpl({
            env: config.env,
            staticBase: url.format(config.staticFileServer),
            apiBase: url.format(config.apiServer),
            domain: config.domain
        }), { 'Cache-Control': 'public, max-age=' + extension.datetime.getFileMaxAge() });
    }
};

module.exports = WebPageService;