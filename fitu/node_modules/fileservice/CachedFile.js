
var mime = require('mime');
var extension = require('extension');
var bluebird = require('bluebird');

var CachedFile = function () {
    this.modifiedOn = null;
    this.raw = null;
    this.gzip = null;
    this.mime = null;
};
CachedFile.prototype.load = function (filepath, gzip) {
    var me = this;
    return bluebird.all([extension.file.fileLastModified(filepath), extension.file.readFile(filepath)])
    .then(function (d) {
        me.modifiedOn = d[0].getTime();
        me.raw = d[1];
        me.mime = mime.lookup(filepath);
        if (typeof gzip === 'function')
            gzip = gzip(me.mime);
        if (gzip) {
            return extension.file.gzipContent(me.raw)
            .then(function (gzipped) {
                me.gzip = gzipped;
                return me;
            });
        }
        else
            return me;
    });
};

module.exports = CachedFile;
